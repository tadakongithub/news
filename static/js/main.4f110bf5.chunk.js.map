{"version":3,"sources":["apis/newsapi.js","components/NewsList.js","actions/index.js","components/App.js","reducers/index.js","reducers/fetchNewsReducer.js","reducers/handleChangeReducer.js","index.js","localStorage.js"],"names":["axios","create","baseURL","NewsList","props","handleChange","bind","handleSubmit","e","this","handleTypingSearchString","target","value","preventDefault","fetchNews","searchString","news","map","eachNews","index","className","key","href","url","rel","urlToImage","src","title","description","console","log","onSubmit","type","onChange","id","renderList","React","Component","connect","state","string","dispatch","getState","a","today","Date","date","getFullYear","getMonth","getDate","newsapi","get","response","payload","data","articles","App","combineReducers","action","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","reducers","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","stringify","setItem","saveState","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.4f110bf5.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://newsapi.org/v2/everything'\n});","import React from 'react';\nimport { fetchNews, handleTypingSearchString } from '../actions';\nimport { connect } from 'react-redux';\nimport './NewsList.css';\n\nclass NewsList extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(e){\n        this.props.handleTypingSearchString(e.target.value);\n    }\n\n    handleSubmit(e){\n        e.preventDefault();\n        this.props.fetchNews(this.props.searchString);\n    }\n\n\n\n    renderList(){\n        return this.props.news.map( (eachNews, index) => {\n            const image = () => {\n                if(eachNews.urlToImage !== null){\n                    return <img className=\"ui fluid image\" src={eachNews.urlToImage}/>\n                } else {\n                    return <img src=\"https://img.icons8.com/ultraviolet/80/000000/no-image.png\"/>\n                }\n            }\n            return (\n                <a className=\"ui grid anchor segment\" key={index} href={eachNews.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <div className=\"four wide column\">{image()}</div>\n\n                    <div className=\"twelve wide column\">\n                        <h3 className=\"ui header\">{eachNews.title}</h3>\n                        <div className=\"ui basic segment\">\n                            <div>{eachNews.description}</div>\n                        </div>\n                    </div>\n                </a> \n            )\n        });\n    }\n\n    render(){\n        console.log(this.props.news);\n        return (\n            <div>\n                <div className=\"ui red grid inverted menu\">\n                    <div className=\"item centered row\">\n                        <h2>Tada News</h2>\n                    </div>\n                </div>\n\n                <div className=\"ui grid container\">\n                    <div className=\"item centered row\">Type in a word to search for news related to it</div>\n                </div>\n\n                \n                <div className=\"ui container\">\n                    <form className=\"ui form\" onSubmit={this.handleSubmit}>\n                        <div className=\"field\">\n                            <input value={this.props.searchString} type=\"text\" onChange={this.handleChange}/>\n                        </div>\n                    </form>\n                </div>\n                \n                <div id=\"news_list\" className=\"ui container\">\n                    <div className=\"ui list\">{this.renderList()}</div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {news: state.news, searchString: state.searchString}\n}\n\nexport default connect(mapStateToProps, { fetchNews, handleTypingSearchString })(NewsList);","import newsapi from '../apis/newsapi';\n\n\nexport const fetchNews = (string) => {\n    return async (dispatch, getState) => {\n        //get today's date\n        let today = new Date();\n        let date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n        const url = `?q=${string}&from=${date}&sortBy=popularity&apiKey=2d0b01e1b28a4ab386a4ca788fcaa4d5`;\n\n        //API call\n        const response = await newsapi.get(url);\n        \n        dispatch({type: 'FETCH_NEWS', payload: response.data.articles});\n    }\n}\n\nexport const handleTypingSearchString = (string) => {\n    return {\n        type: 'HANDLE_TYPING_SEARCH_STRING',\n        payload: string\n    }\n}\n\n","import React from 'react';\nimport NewsList from './NewsList';\n\nconst App = (props) => {\n    return(\n        <NewsList/>\n    )\n}\n\n\nexport default App;","import { combineReducers } from 'redux';\nimport { fetchNewsReducer } from './fetchNewsReducer';\nimport { handleChangeReducer } from './handleChangeReducer';\n\n\n\n\nexport default combineReducers({\n    news: fetchNewsReducer,\n    searchString: handleChangeReducer\n});","export const fetchNewsReducer = (state = [], action) => {\n    if(action.type === 'FETCH_NEWS'){\n        return action.payload\n    }\n    return state;\n}\n\n","export const handleChangeReducer = (state = '', action) => {\n    if(action.type === 'HANDLE_TYPING_SEARCH_STRING'){\n        return action.payload;\n    }\n    return state;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reducers from './reducers';\nimport thunk from 'redux-thunk';\nimport 'firebase/auth';\nimport {loadState, saveState} from './localStorage'\n\n\n\nconst persistedState = loadState();\nconst store = createStore(reducers, persistedState, applyMiddleware(thunk),window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nstore.subscribe(() => {\n\tsaveState(store.getState());\n})\n\nReactDOM.render(\n    <Provider store={store}>\n            <App />\n    </Provider>,\n    document.querySelector('#root')\n)\n","export const loadState = () => {\n\ttry{\n\t\tconst serializedState = localStorage.getItem('state');\n\t\tif(serializedState === null){\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn JSON.parse(serializedState)\n\t} catch (err) {\n\t\treturn undefined;\n\t}\n}\n\nexport const saveState = (state) => {\n\ttry{\n\t\tconst serializedState = JSON.stringify(state)\n\t\tlocalStorage.setItem('state', serializedState);\n\t} catch (err) {\n\t\tconsole.log(err)\n\t}\n}"],"sourceRoot":""}